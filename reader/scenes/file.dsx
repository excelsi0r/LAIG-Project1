<!-- Os comentarios devem ter espacos no inicio e no fim, a -->
<!-- separar dos hifens -->
<!-- Nao devem ser usados caracteres especiais (p.ex. acentos) -->
<!-- Todas as tags e atributos sao obrigatorios, exceto onde for -->
<!-- referido o contrario -->

<!-- Na descricao abaixo, os simbolos utilizados tem o seguinte significado: -->
    <!-- ii: integer value -->
    <!-- ff: float value -->
    <!-- ss: string value -->
    <!-- cc: character "x" or "y" or "z" -->
    <!-- tt: "0" or "1" with Boolean significance -->

    
<dsx>


    <!-- deve definir-se um objeto para raiz do grafo , assim -->
    <!-- como o comprimento dos tres eixos (cilindros) -->
    <scene root="ss" axis_length="ff" />
    
    
    <views default="ss" >
    
        <!-- declaracao obrigatoria de pelo menos uma vista; -->
        <!-- se varias vistas declaradas, o default e' a -->
        <!-- primeira vista; de cada vez que se pressione a tecla v/V, -->
        <!-- a vista muda para a proxima da lista; da --> 
        <!-- ultima vista da lista volta 'a primeira -->
        <perspective id="ss" near="ff" far="ff" angle="ff">
            <from x="1.3" y="0.4" z="0.1" />
            <to x="2" y="1.2" z="ff" />
        </perspective>
        
        <perspective id="ss" near="ff" far="ff" angle="ff">
            <from x="1.0" y="0" z="0.3" />
            <to x="0.7" y="1" z="ff" />
        </perspective>
        
    </views>
    

    <illumination doublesided="0" local="1" >
    
        <ambient r="0.3" g="0.1" b="0.1" a="1" />
        <background r="0.69" g="0.80" b="0.92" a="1" />
        
    </illumination>
    
    
    <lights>
    
        <!-- Deve existir um ou mais blocos "omni" ou "spot" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <omni id="ss" enabled="1" >
            <location x="1" y="ff" z="ff" w="ff" />
            <ambient r="2" g="ff" b="ff" a="ff" />
            <diffuse r="3" g="ff" b="ff" a="ff" />
            <specular r="4" g="ff" b="ff" a="ff" />
        </omni>

        <omni id="ss" enabled="0" >
            <location x="5" y="ff" z="ff" w="ff" />
            <ambient r="1" g="ff" b="ff" a="ff" />
            <diffuse r="2" g="ff" b="ff" a="ff" />
            <specular r="10" g="ff" b="0.3" a="ff" />
        </omni>
        
        <spot id="ss" enabled="0" angle="ff" exponent="ff">
            <!-- atencao, "target" e' diferente de "direction" -->
            <target x="0.8" y="ff" z="ff" />
            <location x="ff" y="ff" z="ff" />
            <ambient r="ff" g="ff" b="ff" a="0.3" />
            <diffuse r="ff" g="ff" b="ff" a="ff" />
            <specular r="0.6" g="ff" b="ff" a="ff" />
        </spot>
        <spot id="ss" enabled="0" angle="ff" exponent="ff">
            <!-- atencao, "target" e' diferente de "direction" -->
            <target x="9" y="ff" z="ff" />
            <location x="ff" y="ff" z="ff" />
            <ambient r="ff" g="ff" b="ff" a="ff" />
            <diffuse r="ff" g="0.5" b="ff" a="ff" />
            <specular r="0.4" g="ff" b="ff" a="ff" />
        </spot>
    </lights>
    
    
    <textures>
    
        <!-- Deve existir um ou mais blocos "texture" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <!-- length_s e length_t sao fatores de escala de textura:-->
        <!-- Exemplo length_s=3.0: uma ocorrencia da textura, em -->
        <!-- comprimento, deve cobrir um comprimento igual -->
        <!-- a 3 unidades;  -->
        <!-- Exemplo length_t=0.4, uma ocorrencia da textura, em -->
        <!-- largura, deve cobrir uma largura igual a 0.4 unidades.  -->
        <!-- Transf. Geometr. do tipo escalamento sobre os -->
        <!-- objetos respetivos podem a violar esta regra.         -->
        <!-- Nao necessario aplicar fatores de escala em  -->
        <!-- quadricas (esfera, ciclindro...) -->
        <texture id="ss" file="ss" length_s="ff" length_t="ff" /> 
        <texture id="ss" file="ss" length_s="1.3" length_t="ff" /> 
        
    </textures>

    
    <materials>
    
        <!-- Deve existir um ou mais blocos "material" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <material id="wood" >
            <emission r="ff" g="ff" b="ff" a="ff" />
            <ambient r="255" g="ff" b="ff" a="ff" />
            <diffuse r="ff" g="255" b="ff" a="ff" />
            <specular r="ff" g="ff" b="240" a="ff" />
            <shininess value="5" />
        </material>
        <material id="aluminium" >
            <emission r="200" g="ff" b="ff" a="ff" />
            <ambient r="ff" g="120" b="ff" a="ff" />
            <diffuse r="ff" g="ff" b="15" a="ff" />
            <specular r="ff" g="ff" b="ff" a="1" />
            <shininess value="2" />
        </material>
    </materials>
    
    
    <transformations>
    
        <!-- Deve existir um ou mais blocos "transformation" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <transformation id="inx">
           <!-- instrucoes a usar sem limite nem ordem -->
           <!-- deve existir pelo menos uma transformacao -->
           <translate x="ff" y="ff" z="ff" />
           <rotate axis="cc" angle="ff" />
           <scale x="ff" y="ff" z="ff" />
        </transformation>
        <transformation id="iny">
           <!-- instrucoes a usar sem limite nem ordem -->
           <!-- deve existir pelo menos uma transformacao -->
           <translate x="ff" y="ff" z="ff" />
           <rotate axis="cc" angle="ff" />
           <scale x="ff" y="ff" z="ff" />
        </transformation>
        
    </transformations>
    
    
    <primitives>
    
        <!-- Deve existir um ou mais blocos "primitive" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <primitive id="wall">
           
            <!-- apenas pode existir UMA das seguintes tags: -->
            <!--     rectangle, triangle, cylinder, sphere, torus -->
            <!-- os parametros devem ser interpretados, genericamente como-->
            <!-- em OpenGL/GLUT; o cilindro deve adicionalmente ter tampas -->
            <rectangle x1="ff" y1="ff" x2="ff" y2="ff" />
            <triangle x1="ff" y1="ff" z1="ff" x2="ff" y2="ff" z2="ff" x3="ff" y3="ff" z3="ff" />
            <cylinder base="ff" top="ff" height="ff" slices="ii" stacks="ii" />
            <sphere radius="ff" slices="ii" stacks="ii" />
            <torus inner="ff" outer="ff" slices="ii" loops="ii" />
            
        </primitive>
        <primitive id="flour">
           
            <!-- apenas pode existir UMA das seguintes tags: -->
            <!--     rectangle, triangle, cylinder, sphere, torus -->
            <!-- os parametros devem ser interpretados, genericamente como-->
            <!-- em OpenGL/GLUT; o cilindro deve adicionalmente ter tampas -->
            <rectangle x1="ff" y1="ff" x2="ff" y2="ff" />
            <triangle x1="ff" y1="ff" z1="ff" x2="ff" y2="ff" z2="ff" x3="ff" y3="ff" z3="ff" />
            <cylinder base="ff" top="ff" height="ff" slices="ii" stacks="ii" />
            <sphere radius="ff" slices="ii" stacks="ii" />
            <torus inner="ff" outer="ff" slices="ii" loops="ii" />
            
        </primitive>
        
    </primitives>
    
    
    <components>
        
        <component id="ss">
        
            <!-- bloco "transformation" obrigatorio -->
            <transformation>
            
                <!-- deve conter uma referencia a uma das "transformation" -->
                <!-- declaradas anteriormente -->
                <transformationref id="ss" />
                
                <!-- ou, ALTERNATIVAMENTE, transformacoes explicitas, -->
                <!-- usando zero ou mais das instrucoes seguintes, sem -->
                <!-- limite nem ordem -->
                <!-- ex: bloco transformation pode ficar sem conteudo -->
                <translate x="ff" y="ff" z="ff" />
                <rotate axis="cc" angle="ff" />
                <scale x="ff" y="ff" z="ff" />
            </transformation>
       
            <!-- declaracao obrigatoria de pelo menos um material; -->
            <!-- o material id="inherit", mantem (herda) material do "pai" -->
            <!-- se varios materiais declarados, o default e' o -->
            <!-- primeiro material; de cada vez que se pressione a tecla m/M, -->
            <!-- o material muda para o proximo material da lista; do --> 
            <!-- ultimo material da lista volta ao primeiro -->
            <materials>
                <material id="ss" />
            </materials>
                         
            <!-- declaracao obrigatoria de texture -->
            <!-- id="inherit" mantem (herda) a textura do objecto "pai" -->
            <!-- id="none" remove a textura recebida do pai -->
            <!-- a textura declarada sobrepoe a textura recebida do -->
            <!-- objecto "pai" -->
            <texture id="hh" />
            <texture id="sdsd" />
            
            <!-- bloco "children" obrigatorio num "component" -->
            <children>
            
                <!-- deve existir uma ou mais tags "componentref" e/ou -->
                <!-- "primitiveref", identificando outros -->
                <!-- componentes ou primitivas -->
                <componentref id="bbb" />
                <primitiveref id="zz" />
                
            </children>
            
        </component>
        
    </components>

</dsx>